/*Copyright (c) 2015-2016 wavemaker-com All Rights Reserved.This software is the confidential and proprietary information of wavemaker-com You shall not disclose such Confidential Information and shall use it only in accordance with the terms of the source code license agreement you entered into with wavemaker-com*/
package com.salesvision2_0.mytestdatabase;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * Personnel generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`Personnel`")
public class Personnel implements Serializable {

    private Integer id;
    private String name;
    private Integer cityCode;
    private City city;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`ID`", nullable = false, scale = 0, precision = 10)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @Column(name = "`Name`", nullable = true, length = 15)
    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    @Column(name = "`City_code`", nullable = true, scale = 0, precision = 10)
    public Integer getCityCode() {
        return this.cityCode;
    }

    public void setCityCode(Integer cityCode) {
        this.cityCode = cityCode;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`City_code`", referencedColumnName = "`ID`", insertable = false, updatable = false)
    public City getCity() {
        return this.city;
    }

    public void setCity(City city) {
        if(city != null) {
            this.cityCode = city.getId();
        }

        this.city = city;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Personnel)) return false;
        final Personnel personnel = (Personnel) o;
        return Objects.equals(getId(), personnel.getId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getId());
    }
}

