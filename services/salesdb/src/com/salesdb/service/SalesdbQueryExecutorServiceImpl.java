/*Copyright (c) 2015-2016 wavemaker-com All Rights Reserved.This software is the confidential and proprietary information of wavemaker-com You shall not disclose such Confidential Information and shall use it only in accordance with the terms of the source code license agreement you entered into with wavemaker-com*/

package com.salesdb.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.util.HashMap;
import java.util.Map;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.wavemaker.runtime.data.dao.query.WMQueryExecutor;
import com.wavemaker.runtime.data.export.ExportType;
import com.wavemaker.runtime.file.model.Downloadable;

import com.salesdb.models.query.*;

@Service
public class SalesdbQueryExecutorServiceImpl implements SalesdbQueryExecutorService {

    private static final Logger LOGGER = LoggerFactory.getLogger(SalesdbQueryExecutorServiceImpl.class);

    @Autowired
    @Qualifier("salesdbWMQueryExecutor")
    private WMQueryExecutor queryExecutor;

    @Transactional(readOnly = true, value = "salesdbTransactionManager")
    @Override
    public Page<RepsCountResponse> executeRepsCount(Integer channel, Pageable pageable) {
        Map params = new HashMap(1);

        params.put("channel", channel);

        return queryExecutor.executeNamedQuery("repsCount", params, RepsCountResponse.class, pageable);
    }

    @Transactional(readOnly = true, value = "salesdbTransactionManager")
    @Override
    public Downloadable exportRepsCount(ExportType exportType, Integer channel, Pageable pageable) {
        Map params = new HashMap(1);

        params.put("channel", channel);

        return queryExecutor.exportNamedQueryData("repsCount", params, exportType, RepsCountResponse.class, pageable);
    }

    @Transactional(readOnly = true, value = "salesdbTransactionManager")
    @Override
    public Page<LeadsByChannelResponse> executeLeadsByChannel(Integer channel, Pageable pageable) {
        Map params = new HashMap(1);

        params.put("channel", channel);

        return queryExecutor.executeNamedQuery("leadsByChannel", params, LeadsByChannelResponse.class, pageable);
    }

    @Transactional(readOnly = true, value = "salesdbTransactionManager")
    @Override
    public Downloadable exportLeadsByChannel(ExportType exportType, Integer channel, Pageable pageable) {
        Map params = new HashMap(1);

        params.put("channel", channel);

        return queryExecutor.exportNamedQueryData("leadsByChannel", params, exportType, LeadsByChannelResponse.class, pageable);
    }

    @Transactional(readOnly = true, value = "salesdbTransactionManager")
    @Override
    public Page<LeadsCountResponse> executeLeadsCount(Integer channel, Pageable pageable) {
        Map params = new HashMap(1);

        params.put("channel", channel);

        return queryExecutor.executeNamedQuery("leadsCount", params, LeadsCountResponse.class, pageable);
    }

    @Transactional(readOnly = true, value = "salesdbTransactionManager")
    @Override
    public Downloadable exportLeadsCount(ExportType exportType, Integer channel, Pageable pageable) {
        Map params = new HashMap(1);

        params.put("channel", channel);

        return queryExecutor.exportNamedQueryData("leadsCount", params, exportType, LeadsCountResponse.class, pageable);
    }

    @Transactional(readOnly = true, value = "salesdbTransactionManager")
    @Override
    public Page<SalesByEachRepResponse> executeSalesByEachRep(Integer id, Pageable pageable) {
        Map params = new HashMap(1);

        params.put("id", id);

        return queryExecutor.executeNamedQuery("salesByEachRep", params, SalesByEachRepResponse.class, pageable);
    }

    @Transactional(readOnly = true, value = "salesdbTransactionManager")
    @Override
    public Downloadable exportSalesByEachRep(ExportType exportType, Integer id, Pageable pageable) {
        Map params = new HashMap(1);

        params.put("id", id);

        return queryExecutor.exportNamedQueryData("salesByEachRep", params, exportType, SalesByEachRepResponse.class, pageable);
    }

    @Transactional(readOnly = true, value = "salesdbTransactionManager")
    @Override
    public Page<CustomersRatioResponse> executeCustomersRatio(Integer year, Integer month, Pageable pageable) {
        Map params = new HashMap(2);

        params.put("year", year);
        params.put("month", month);

        return queryExecutor.executeNamedQuery("customersRatio", params, CustomersRatioResponse.class, pageable);
    }

    @Transactional(readOnly = true, value = "salesdbTransactionManager")
    @Override
    public Downloadable exportCustomersRatio(ExportType exportType, Integer year, Integer month, Pageable pageable) {
        Map params = new HashMap(2);

        params.put("year", year);
        params.put("month", month);

        return queryExecutor.exportNamedQueryData("customersRatio", params, exportType, CustomersRatioResponse.class, pageable);
    }

    @Transactional(readOnly = true, value = "salesdbTransactionManager")
    @Override
    public Page<SalesByRepsResponse> executeSalesByReps(Integer channel, Pageable pageable) {
        Map params = new HashMap(1);

        params.put("channel", channel);

        return queryExecutor.executeNamedQuery("salesByReps", params, SalesByRepsResponse.class, pageable);
    }

    @Transactional(readOnly = true, value = "salesdbTransactionManager")
    @Override
    public Downloadable exportSalesByReps(ExportType exportType, Integer channel, Pageable pageable) {
        Map params = new HashMap(1);

        params.put("channel", channel);

        return queryExecutor.exportNamedQueryData("salesByReps", params, exportType, SalesByRepsResponse.class, pageable);
    }

    @Transactional(readOnly = true, value = "salesdbTransactionManager")
    @Override
    public Page<WeeklyQuotesResponse> executeWeeklyQuotes(Integer year, Integer month, Pageable pageable) {
        Map params = new HashMap(2);

        params.put("year", year);
        params.put("month", month);

        return queryExecutor.executeNamedQuery("weeklyQuotes", params, WeeklyQuotesResponse.class, pageable);
    }

    @Transactional(readOnly = true, value = "salesdbTransactionManager")
    @Override
    public Downloadable exportWeeklyQuotes(ExportType exportType, Integer year, Integer month, Pageable pageable) {
        Map params = new HashMap(2);

        params.put("year", year);
        params.put("month", month);

        return queryExecutor.exportNamedQueryData("weeklyQuotes", params, exportType, WeeklyQuotesResponse.class, pageable);
    }

    @Transactional(readOnly = true, value = "salesdbTransactionManager")
    @Override
    public Page<SalesRevenueAndCountResponse> executeSalesRevenueAndCount(Integer channel, Pageable pageable) {
        Map params = new HashMap(1);

        params.put("channel", channel);

        return queryExecutor.executeNamedQuery("salesRevenueAndCount", params, SalesRevenueAndCountResponse.class, pageable);
    }

    @Transactional(readOnly = true, value = "salesdbTransactionManager")
    @Override
    public Downloadable exportSalesRevenueAndCount(ExportType exportType, Integer channel, Pageable pageable) {
        Map params = new HashMap(1);

        params.put("channel", channel);

        return queryExecutor.exportNamedQueryData("salesRevenueAndCount", params, exportType, SalesRevenueAndCountResponse.class, pageable);
    }

    @Transactional(readOnly = true, value = "salesdbTransactionManager")
    @Override
    public Page<EachRepCustomerWiseSalesResponse> executeEachRepCustomerWiseSales(Integer id, Pageable pageable) {
        Map params = new HashMap(1);

        params.put("id", id);

        return queryExecutor.executeNamedQuery("eachRepCustomerWiseSales", params, EachRepCustomerWiseSalesResponse.class, pageable);
    }

    @Transactional(readOnly = true, value = "salesdbTransactionManager")
    @Override
    public Downloadable exportEachRepCustomerWiseSales(ExportType exportType, Integer id, Pageable pageable) {
        Map params = new HashMap(1);

        params.put("id", id);

        return queryExecutor.exportNamedQueryData("eachRepCustomerWiseSales", params, exportType, EachRepCustomerWiseSalesResponse.class, pageable);
    }

    @Transactional(readOnly = true, value = "salesdbTransactionManager")
    @Override
    public Page<WeeklyConvertedResponse> executeWeeklyConverted(Integer year, Integer month, Pageable pageable) {
        Map params = new HashMap(2);

        params.put("year", year);
        params.put("month", month);

        return queryExecutor.executeNamedQuery("weeklyConverted", params, WeeklyConvertedResponse.class, pageable);
    }

    @Transactional(readOnly = true, value = "salesdbTransactionManager")
    @Override
    public Downloadable exportWeeklyConverted(ExportType exportType, Integer year, Integer month, Pageable pageable) {
        Map params = new HashMap(2);

        params.put("year", year);
        params.put("month", month);

        return queryExecutor.exportNamedQueryData("weeklyConverted", params, exportType, WeeklyConvertedResponse.class, pageable);
    }

    @Transactional(readOnly = true, value = "salesdbTransactionManager")
    @Override
    public Page<WeeklyFollowUpsResponse> executeWeeklyFollowUps(Integer year, Integer month, Pageable pageable) {
        Map params = new HashMap(2);

        params.put("year", year);
        params.put("month", month);

        return queryExecutor.executeNamedQuery("weeklyFollowUps", params, WeeklyFollowUpsResponse.class, pageable);
    }

    @Transactional(readOnly = true, value = "salesdbTransactionManager")
    @Override
    public Downloadable exportWeeklyFollowUps(ExportType exportType, Integer year, Integer month, Pageable pageable) {
        Map params = new HashMap(2);

        params.put("year", year);
        params.put("month", month);

        return queryExecutor.exportNamedQueryData("weeklyFollowUps", params, exportType, WeeklyFollowUpsResponse.class, pageable);
    }

    @Transactional(readOnly = true, value = "salesdbTransactionManager")
    @Override
    public Page<SalesByChannelsResponse> executeSalesByChannels(Integer year, Integer month, Pageable pageable) {
        Map params = new HashMap(2);

        params.put("year", year);
        params.put("month", month);

        return queryExecutor.executeNamedQuery("salesByChannels", params, SalesByChannelsResponse.class, pageable);
    }

    @Transactional(readOnly = true, value = "salesdbTransactionManager")
    @Override
    public Downloadable exportSalesByChannels(ExportType exportType, Integer year, Integer month, Pageable pageable) {
        Map params = new HashMap(2);

        params.put("year", year);
        params.put("month", month);

        return queryExecutor.exportNamedQueryData("salesByChannels", params, exportType, SalesByChannelsResponse.class, pageable);
    }

    @Transactional(readOnly = true, value = "salesdbTransactionManager")
    @Override
    public Page<WeeklySalesResponse> executeWeeklySales(Integer year, Integer month, Pageable pageable) {
        Map params = new HashMap(2);

        params.put("year", year);
        params.put("month", month);

        return queryExecutor.executeNamedQuery("weeklySales", params, WeeklySalesResponse.class, pageable);
    }

    @Transactional(readOnly = true, value = "salesdbTransactionManager")
    @Override
    public Downloadable exportWeeklySales(ExportType exportType, Integer year, Integer month, Pageable pageable) {
        Map params = new HashMap(2);

        params.put("year", year);
        params.put("month", month);

        return queryExecutor.exportNamedQueryData("weeklySales", params, exportType, WeeklySalesResponse.class, pageable);
    }

    @Transactional(readOnly = true, value = "salesdbTransactionManager")
    @Override
    public Page<WeeklyLeadsResponse> executeWeeklyLeads(Integer year, Integer month, Pageable pageable) {
        Map params = new HashMap(2);

        params.put("year", year);
        params.put("month", month);

        return queryExecutor.executeNamedQuery("weeklyLeads", params, WeeklyLeadsResponse.class, pageable);
    }

    @Transactional(readOnly = true, value = "salesdbTransactionManager")
    @Override
    public Downloadable exportWeeklyLeads(ExportType exportType, Integer year, Integer month, Pageable pageable) {
        Map params = new HashMap(2);

        params.put("year", year);
        params.put("month", month);

        return queryExecutor.exportNamedQueryData("weeklyLeads", params, exportType, WeeklyLeadsResponse.class, pageable);
    }

    @Transactional(readOnly = true, value = "salesdbTransactionManager")
    @Override
    public Page<RevenueHeatMapResponse> executeRevenueHeatMap(Integer year, Integer month, Pageable pageable) {
        Map params = new HashMap(2);

        params.put("year", year);
        params.put("month", month);

        return queryExecutor.executeNamedQuery("revenueHeatMap", params, RevenueHeatMapResponse.class, pageable);
    }

    @Transactional(readOnly = true, value = "salesdbTransactionManager")
    @Override
    public Downloadable exportRevenueHeatMap(ExportType exportType, Integer year, Integer month, Pageable pageable) {
        Map params = new HashMap(2);

        params.put("year", year);
        params.put("month", month);

        return queryExecutor.exportNamedQueryData("revenueHeatMap", params, exportType, RevenueHeatMapResponse.class, pageable);
    }

    @Transactional(readOnly = true, value = "salesdbTransactionManager")
    @Override
    public Page<TopTrendingProductsResponse> executeTopTrendingProducts(Integer year, Integer month, Pageable pageable) {
        Map params = new HashMap(2);

        params.put("year", year);
        params.put("month", month);

        return queryExecutor.executeNamedQuery("topTrendingProducts", params, TopTrendingProductsResponse.class, pageable);
    }

    @Transactional(readOnly = true, value = "salesdbTransactionManager")
    @Override
    public Downloadable exportTopTrendingProducts(ExportType exportType, Integer year, Integer month, Pageable pageable) {
        Map params = new HashMap(2);

        params.put("year", year);
        params.put("month", month);

        return queryExecutor.exportNamedQueryData("topTrendingProducts", params, exportType, TopTrendingProductsResponse.class, pageable);
    }

}


