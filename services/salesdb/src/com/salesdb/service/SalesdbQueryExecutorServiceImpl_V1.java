/*Copyright (c) 2015-2016 wavemaker-com All Rights Reserved.This software is the confidential and proprietary information of wavemaker-com You shall not disclose such Confidential Information and shall use it only in accordance with the terms of the source code license agreement you entered into with wavemaker-com*/

package com.salesdb.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.util.HashMap;
import java.util.Map;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.wavemaker.runtime.data.dao.query.WMQueryExecutor;
import com.wavemaker.runtime.data.export.ExportType;
import com.wavemaker.runtime.file.model.Downloadable;

import com.salesdb.models.query.*;

@Service
public class SalesdbQueryExecutorServiceImpl_V1 implements SalesdbQueryExecutorService_V1 {

    private static final Logger LOGGER = LoggerFactory.getLogger(SalesdbQueryExecutorServiceImpl.class);

    @Autowired
    @Qualifier("salesdbWMQueryExecutor")
    private WMQueryExecutor queryExecutor;

    @Transactional(readOnly = true, value = "salesdbTransactionManager")
    @Override
    public Page<Object> executeRepsCount(Pageable pageable, Integer channel) {
        Map params = new HashMap(1);

        params.put("channel", channel);

        return queryExecutor.executeNamedQuery("repsCount", params, Object.class, pageable);
    }

    @Transactional(readOnly = true, value = "salesdbTransactionManager")
    @Override
    public Page<Object> executeLeadsByChannel(Pageable pageable, Integer channel) {
        Map params = new HashMap(1);

        params.put("channel", channel);

        return queryExecutor.executeNamedQuery("leadsByChannel", params, Object.class, pageable);
    }

    @Transactional(readOnly = true, value = "salesdbTransactionManager")
    @Override
    public Page<Object> executeLeadsCount(Pageable pageable, Integer channel) {
        Map params = new HashMap(1);

        params.put("channel", channel);

        return queryExecutor.executeNamedQuery("leadsCount", params, Object.class, pageable);
    }

    @Transactional(readOnly = true, value = "salesdbTransactionManager")
    @Override
    public Page<Object> executeSalesByEachRep(Pageable pageable, Integer id) {
        Map params = new HashMap(1);

        params.put("id", id);

        return queryExecutor.executeNamedQuery("salesByEachRep", params, Object.class, pageable);
    }

    @Transactional(readOnly = true, value = "salesdbTransactionManager")
    @Override
    public Page<Object> executeCustomersRatio(Pageable pageable, Integer year, Integer month) {
        Map params = new HashMap(2);

        params.put("year", year);
        params.put("month", month);

        return queryExecutor.executeNamedQuery("customersRatio", params, Object.class, pageable);
    }

    @Transactional(readOnly = true, value = "salesdbTransactionManager")
    @Override
    public Page<Object> executeSalesByReps(Pageable pageable, Integer channel) {
        Map params = new HashMap(1);

        params.put("channel", channel);

        return queryExecutor.executeNamedQuery("salesByReps", params, Object.class, pageable);
    }

    @Transactional(readOnly = true, value = "salesdbTransactionManager")
    @Override
    public Page<Object> executeWeeklyQuotes(Pageable pageable, Integer year, Integer month) {
        Map params = new HashMap(2);

        params.put("year", year);
        params.put("month", month);

        return queryExecutor.executeNamedQuery("weeklyQuotes", params, Object.class, pageable);
    }

    @Transactional(readOnly = true, value = "salesdbTransactionManager")
    @Override
    public Page<Object> executeSalesRevenueAndCount(Pageable pageable, Integer channel) {
        Map params = new HashMap(1);

        params.put("channel", channel);

        return queryExecutor.executeNamedQuery("salesRevenueAndCount", params, Object.class, pageable);
    }

    @Transactional(readOnly = true, value = "salesdbTransactionManager")
    @Override
    public Page<Object> executeEachRepCustomerWiseSales(Pageable pageable, Integer id) {
        Map params = new HashMap(1);

        params.put("id", id);

        return queryExecutor.executeNamedQuery("eachRepCustomerWiseSales", params, Object.class, pageable);
    }

    @Transactional(readOnly = true, value = "salesdbTransactionManager")
    @Override
    public Page<Object> executeWeeklyConverted(Pageable pageable, Integer year, Integer month) {
        Map params = new HashMap(2);

        params.put("year", year);
        params.put("month", month);

        return queryExecutor.executeNamedQuery("weeklyConverted", params, Object.class, pageable);
    }

    @Transactional(readOnly = true, value = "salesdbTransactionManager")
    @Override
    public Page<Object> executeWeeklyFollowUps(Pageable pageable, Integer year, Integer month) {
        Map params = new HashMap(2);

        params.put("year", year);
        params.put("month", month);

        return queryExecutor.executeNamedQuery("weeklyFollowUps", params, Object.class, pageable);
    }

    @Transactional(readOnly = true, value = "salesdbTransactionManager")
    @Override
    public Page<Object> executeSalesByChannels(Pageable pageable, Integer year, Integer month) {
        Map params = new HashMap(2);

        params.put("year", year);
        params.put("month", month);

        return queryExecutor.executeNamedQuery("salesByChannels", params, Object.class, pageable);
    }

    @Transactional(readOnly = true, value = "salesdbTransactionManager")
    @Override
    public Page<Object> executeWeeklySales(Pageable pageable, Integer year, Integer month) {
        Map params = new HashMap(2);

        params.put("year", year);
        params.put("month", month);

        return queryExecutor.executeNamedQuery("weeklySales", params, Object.class, pageable);
    }

    @Transactional(readOnly = true, value = "salesdbTransactionManager")
    @Override
    public Page<Object> executeWeeklyLeads(Pageable pageable, Integer year, Integer month) {
        Map params = new HashMap(2);

        params.put("year", year);
        params.put("month", month);

        return queryExecutor.executeNamedQuery("weeklyLeads", params, Object.class, pageable);
    }

    @Transactional(readOnly = true, value = "salesdbTransactionManager")
    @Override
    public Page<Object> executeRevenueHeatMap(Pageable pageable, Integer year, Integer month) {
        Map params = new HashMap(2);

        params.put("year", year);
        params.put("month", month);

        return queryExecutor.executeNamedQuery("revenueHeatMap", params, Object.class, pageable);
    }

    @Transactional(readOnly = true, value = "salesdbTransactionManager")
    @Override
    public Page<Object> executeTopTrendingProducts(Pageable pageable, Integer year, Integer month) {
        Map params = new HashMap(2);

        params.put("year", year);
        params.put("month", month);

        return queryExecutor.executeNamedQuery("topTrendingProducts", params, Object.class, pageable);
    }

}


